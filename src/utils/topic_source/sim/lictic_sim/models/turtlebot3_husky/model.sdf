<?xml version="1.0" ?>
<sdf version="1.5">
  <model name="turtlebot3_husky">
    <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose>

    <link name="base_footprint"/>

    <link name="base_link">

      <inertial>
        <pose>0.0 0 0.245 0 0 0</pose>
        <inertia>
          <ixx>5.5</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>8.0</iyy>
          <iyz>0.0</iyz>
          <izz>3.5</izz>
        </inertia>
        <mass>15.0</mass>
      </inertial>

      <collision name="base_collision">
        <pose>0.0 0 0.245 0 0 0</pose>
        <geometry>
          <box>
            <size>0.990 0.670 0.390</size>
          </box>
        </geometry>
      </collision>

      <visual name="base_visual">
        <pose>0.0 0 0.245 0 0 0</pose>
        <geometry>
          <box>
            <size>0.990 0.670 0.390</size>
          </box>
        </geometry>
        <material>
          <ambient>0.2 0.2 0.2 1</ambient>
          <diffuse>0.5 0.5 0.5 1</diffuse>
          <specular>0.1 0.1 0.1 1</specular>
        </material>
      </visual>
    </link>

    <link name="imu_link">
      <sensor name="tb3_imu" type="imu">
        <always_on>true</always_on>
        <update_rate>200</update_rate>
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
        <plugin name="turtlebot3_imu" filename="libgazebo_ros_imu_sensor.so">
          <ros>
            <!-- <namespace>/tb3</namespace> -->
            <remapping>~/out:=imu</remapping>
          </ros>
        </plugin>
      </sensor>
    </link>

    <link name="base_scan">
      <inertial>
        <pose>0 0 0.830 0 0 0</pose>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.001</iyy>
          <iyz>0.000</iyz>
          <izz>0.001</izz>
        </inertia>
        <mass>0.000001</mass>
      </inertial>

      <collision name="lidar_sensor_collision">
        <pose>0 0 0.830 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.0508</radius>
            <length>0.055</length>
          </cylinder>
        </geometry>
      </collision>

      <visual name="lidar_sensor_visual">
        <pose>0 0 0.830 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_common/meshes/lds.dae</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
      </visual>

      <sensor name="hls_lfcd_lds" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <pose>0 0 0.830 0 0 0</pose>
        <update_rate>5</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1.000000</resolution>
              <min_angle>0.000000</min_angle>
              <max_angle>6.280000</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.120000</min>
            <max>20.000000</max>
            <resolution>0.015000</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="turtlebot3_laserscan" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <!-- <namespace>/tb3</namespace> -->
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>base_scan</frame_name>
        </plugin>
      </sensor>
    </link>

    <link name='camera_link'>
      <self_collide>0</self_collide>
      <inertial>
        <pose>0 0 0 0 -0 0</pose>
        <inertia>
          <ixx>1</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>1</iyy>
          <iyz>0</iyz>
          <izz>1</izz>
        </inertia>
        <mass>0.000001</mass>
      </inertial>
      <enable_wind>0</enable_wind>
      <kinematic>0</kinematic>
      <pose>0 0 0.755 0 -0 0</pose>
    </link>

    <link name='camera_rgb_frame_1'>
      <inertial>
        <pose>0.075 0 0 0 -0 0</pose>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.001</iyy>
          <iyz>0</iyz>
          <izz>0.001</izz>
        </inertia>
        <mass>0.000001</mass>
      </inertial>
      <pose>0.270 0 0.755 0 -0 0</pose>
      <sensor name='camera_1' type='camera'>
        <always_on>1</always_on>
        <visualize>1</visualize>
        <update_rate>5</update_rate>
        <camera name='intel_realsense_r200'>
          <horizontal_fov>1.0472</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name='camera_driver_1' filename='libgazebo_ros_camera.so'>
          <ros/>
        </plugin>
      </sensor>
      <self_collide>0</self_collide>
      <enable_wind>0</enable_wind>
      <kinematic>0</kinematic>
    </link>

    <link name='camera_rgb_frame_2'>
      <inertial>
        <pose>0.0375 0.065 0 0 -0 0</pose>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.001</iyy>
          <iyz>0</iyz>
          <izz>0.001</izz>
        </inertia>
        <mass>0.000001</mass>
      </inertial>
      <pose>0.2325 0.065 0.755 0 -0 1.0472</pose>
      <sensor name='camera_2' type='camera'>
        <always_on>1</always_on>
        <visualize>0</visualize>
        <update_rate>5</update_rate>
        <camera name='intel_realsense_r200'>
          <horizontal_fov>1.0472</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name='camera_driver_2' filename='libgazebo_ros_camera.so'>
          <ros/>
        </plugin>
      </sensor>
      <self_collide>0</self_collide>
      <enable_wind>0</enable_wind>
      <kinematic>0</kinematic>
    </link>

    <link name='camera_rgb_frame_3'>
      <inertial>
        <pose>-0.0375 0.065 0 0 -0 0</pose>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.001</iyy>
          <iyz>0</iyz>
          <izz>0.001</izz>
        </inertia>
        <mass>0.000001</mass>
      </inertial>
      <pose>0.1575 0.065 0.755 0 -0 2.0944</pose>
      <sensor name='camera_3' type='camera'>
        <always_on>1</always_on>
        <visualize>0</visualize>
        <update_rate>5</update_rate>
        <camera name='intel_realsense_r200'>
          <horizontal_fov>1.0472</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name='camera_driver_3' filename='libgazebo_ros_camera.so'>
          <ros/>
        </plugin>
      </sensor>
      <self_collide>0</self_collide>
      <enable_wind>0</enable_wind>
      <kinematic>0</kinematic>
      <gravity>1</gravity>
    </link>

    <link name='camera_rgb_frame_4'>
      <inertial>
        <pose>-0.075 0 0 0 -0 0</pose>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.001</iyy>
          <iyz>0</iyz>
          <izz>0.001</izz>
        </inertia>
        <mass>0.000001</mass>
      </inertial>
      <pose>0.120 0 0.755 0 -0 3.1416</pose>
      <sensor name='camera_4' type='camera'>
        <always_on>1</always_on>
        <visualize>0</visualize>
        <update_rate>5</update_rate>
        <camera name='intel_realsense_r200'>
          <horizontal_fov>1.0472</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name='camera_driver_4' filename='libgazebo_ros_camera.so'>
          <ros/>
        </plugin>
      </sensor>
      <self_collide>0</self_collide>
      <enable_wind>0</enable_wind>
      <kinematic>0</kinematic>
    </link>

    <link name='camera_rgb_frame_5'>
      <inertial>
        <pose>-0.0375 -0.065 0 0 -0 0</pose>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.001</iyy>
          <iyz>0</iyz>
          <izz>0.001</izz>
        </inertia>
        <mass>0.000001</mass>
      </inertial>
      <pose>0.1575 -0.065 0.755 -0 -0 -2.0944</pose>
      <sensor name='camera_5' type='camera'>
        <always_on>1</always_on>
        <visualize>0</visualize>
        <update_rate>5</update_rate>
        <camera name='intel_realsense_r200'>
          <horizontal_fov>1.0472</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name='camera_driver_5' filename='libgazebo_ros_camera.so'>
          <ros/>
        </plugin>
      </sensor>
      <self_collide>0</self_collide>
      <enable_wind>0</enable_wind>
      <kinematic>0</kinematic>
    </link>

    <link name='camera_rgb_frame_6'>
      <inertial>
        <pose>0.0375 -0.065 0 0 -0 0</pose>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>0.001</iyy>
          <iyz>0</iyz>
          <izz>0.001</izz>
        </inertia>
        <mass>0.000001</mass>
      </inertial>
      <pose>0.2325 -0.065 0.755 0 0 -1.0472</pose>
      <sensor name='camera_6' type='camera'>
        <always_on>1</always_on>
        <visualize>0</visualize>
        <update_rate>5</update_rate>
        <camera name='intel_realsense_r200'>
          <horizontal_fov>1.0472</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name='camera_driver_6' filename='libgazebo_ros_camera.so'>
          <ros/>
        </plugin>
      </sensor>
      <self_collide>0</self_collide>
      <enable_wind>0</enable_wind>
      <kinematic>0</kinematic>
    </link>

    <link name="wheel_left_link">

      <inertial>
        <pose>0 0.335 0.050 -1.57 0 0</pose>
        <inertia>
          <ixx>1.8158194e-02</ixx>
          <ixy>-9.3392e-11</ixy>
          <ixz>1.04909e-10</ixz>
          <iyy>3.2922126e-02</iyy>
          <iyz>5.75694e-10</iyz>
          <izz>1.8158194e-02</izz>
        </inertia>
        <mass>2.8498940e-01</mass>
      </inertial>

      <collision name="wheel_left_collision">
        <pose>0 0.335 0.050 -1.57 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.050</radius>
            <length>0.030</length>
          </cylinder>
        </geometry>
        <surface>
          <!-- This friction pamareter don't contain reliable data!! -->
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>

      <visual name="wheel_left_visual">
        <pose>0 0.335 0.050 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_common/meshes/tire.dae</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
      </visual>
    </link>

    <link name="wheel_right_link">

      <inertial>
        <pose>0.0 -0.335 0.050 -1.57 0 0</pose>
        <inertia>
          <ixx>1.8158194e-02</ixx>
          <ixy>-9.3392e-11</ixy>
          <ixz>1.04909e-10</ixz>
          <iyy>3.2922126e-02</iyy>
          <iyz>5.75694e-10</iyz>
          <izz>1.8158194e-02</izz>
        </inertia>
        <mass>2.8498940e-01</mass>
      </inertial>

      <collision name="wheel_right_collision">
        <pose>0.0 -0.335 0.050 -1.57 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.050</radius>
            <length>0.030</length>
          </cylinder>
        </geometry>
        <surface>
          <!-- This friction pamareter don't contain reliable data!! -->
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>

      <visual name="wheel_right_visual">
        <pose>0.0 -0.335 0.050 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_common/meshes/tire.dae</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
      </visual>
    </link>

    <link name='caster_back_link'>
      <pose>-0.400 0 0.050 -1.57 0 0</pose>
      <inertial>
        <mass>0.010</mass>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.001</iyy>
          <iyz>0.000</iyz>
          <izz>0.001</izz>
        </inertia>
      </inertial>
      <collision name='collision'>
        <geometry>
          <sphere>
            <radius>0.050000</radius>
          </sphere>
        </geometry>
        <surface>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
          <friction>
            <ode>
              <mu>0.1</mu>
              <mu2>0.1</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>1.0</slip1>
              <slip2>1.0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name='caster_back_visual'>
        <geometry>
          <sphere>
            <radius>0.050000</radius>
          </sphere>
        </geometry>
        <material>
          <ambient>0.1 0.1 0.1 1</ambient>
          <diffuse>0.3 0.3 0.3 1</diffuse>
          <specular>0.1 0.1 0.1 1</specular>
        </material>
      </visual>
    </link>

    <link name='caster_front_link'>
      <pose>0.400 0 0.050 -1.57 0 0</pose>
      <inertial>
        <mass>0.010</mass>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.001</iyy>
          <iyz>0.000</iyz>
          <izz>0.001</izz>
        </inertia>
      </inertial>
      <collision name='collision'>
        <geometry>
          <sphere>
            <radius>0.050000</radius>
          </sphere>
        </geometry>
        <surface>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
          <friction>
            <ode>
              <mu>0.1</mu>
              <mu2>0.1</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>1.0</slip1>
              <slip2>1.0</slip2>
            </ode>
          </friction>
        </surface>
      </collision>
      <visual name='caster_front_visual'>
        <geometry>
          <sphere>
            <radius>0.050000</radius>
          </sphere>
        </geometry>
        <material>
          <ambient>0.1 0.1 0.1 1</ambient>
          <diffuse>0.3 0.3 0.3 1</diffuse>
          <specular>0.1 0.1 0.1 1</specular>
        </material>
      </visual>
    </link>

    <joint name="base_joint" type="fixed">
      <parent>base_footprint</parent>
      <child>base_link</child>
      <pose>0.0 0.0 0.050 0 0 0</pose>
    </joint>

    <joint name="wheel_left_joint" type="revolute">
      <parent>base_link</parent>
      <child>wheel_left_link</child>
      <pose>0.0 0.335 0.050 -1.57 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name="wheel_right_joint" type="revolute">
      <parent>base_link</parent>
      <child>wheel_right_link</child>
      <pose>0.0 -0.335 0.050 -1.57 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name='caster_back_joint' type='ball'>
      <parent>base_link</parent>
      <child>caster_back_link</child>
    </joint>

    <joint name='caster_front_joint' type='ball'>
      <parent>base_link</parent>
      <child>caster_front_link</child>
    </joint>

    <joint name="imu_joint" type="fixed">
      <parent>base_link</parent>
      <child>imu_link</child>
      <pose>0.0 0 0.245 0 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name="lidar_joint" type="fixed">
      <parent>base_link</parent>
      <child>base_scan</child>
      <pose>0 0 0.830 0 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name='camera_joint' type='fixed'>
      <parent>base_link</parent>
      <child>camera_link</child>
      <pose>0 0 0.755 0 -0 0</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>

    <joint name='camera_rgb_joint_1' type='fixed'>
      <parent>camera_link</parent>
      <child>camera_rgb_frame_1</child>
      <pose>0.075 0 0 0 -0 0</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>

    <joint name='camera_rgb_joint_2' type='fixed'>
      <parent>camera_link</parent>
      <child>camera_rgb_frame_2</child>
      <pose>0.0375 0.065 0 0 -0 1.0472</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>

    <joint name='camera_rgb_joint_3' type='fixed'>
      <parent>camera_link</parent>
      <child>camera_rgb_frame_3</child>
      <pose>-0.0375 0.065 0 0 -0 2.0944</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>

    <joint name='camera_rgb_joint_4' type='fixed'>
      <parent>camera_link</parent>
      <child>camera_rgb_frame_4</child>
      <pose>-0.075 0 0 0 -0 3.1416</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>

    <joint name='camera_rgb_joint_5' type='fixed'>
      <parent>camera_link</parent>
      <child>camera_rgb_frame_5</child>
      <pose>-0.0375 -0.065 0 0 -0 -2.0944</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>

    <joint name='camera_rgb_joint_6' type='fixed'>
      <parent>camera_link</parent>
      <child>camera_rgb_frame_6</child>
      <pose>0.0375 -0.065 0 0 -0 -1.0472</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>

    <plugin name="turtlebot3_diff_drive" filename="libgazebo_ros_diff_drive.so">

      <ros>
        <!-- <namespace>/tb3</namespace> -->
      </ros>

      <update_rate>30</update_rate>

      <!-- wheels -->
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>

      <!-- kinematics -->
      <wheel_separation>0.670</wheel_separation>
      <wheel_diameter>0.100</wheel_diameter>

      <!-- limits -->
      <max_wheel_torque>50</max_wheel_torque>
      <max_wheel_acceleration>2.0</max_wheel_acceleration>

      <command_topic>cmd_vel</command_topic>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>

    </plugin>

    <plugin name="turtlebot3_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <!-- <namespace>/tb3</namespace> -->
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>wheel_left_joint</joint_name>
      <joint_name>wheel_right_joint</joint_name>
    </plugin>      
  </model>
</sdf>
